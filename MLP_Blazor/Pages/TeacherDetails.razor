@page "/TeacherDetails/{teacherId:int}"

@inject HttpClient Client
@inject IMapper _mapper
@inject NavigationManager NavManager



<div class="container-fluid p-5">
    <h1 class="display-3">Teacher Details</h1>
    <hr class="my-4">


    <div class="container align-content-center p-5">
        <div class="card-columns">
            <div class="row">
                <div class="card d-inline-block m-auto" style="width: 18rem;">
                    <img src="/images/users.png" class="card-img-top" alt="...">
                </div>
                <div class="card d-inline-block m-auto" style="width: 54rem;">

                    <div class="card-body align-content-center">
                        <h5 class="card-title text-center">@teacher.FirstName @teacher.LastName</h5>
                        <h6 class="card-title text-center">Mubster since : @teacher.DOC.ToShortDateString()</h6>
                        <p class="card-text">@teacher.Description</p>
                        <p class="card-footer text-center">Rating = @teacher.Rating</p>
                        <a href="teachers" class="btn btn-primary w-100">Back to list</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <table class="table table-striped table-hover mt-4 container">
        <thead>
            <tr>
                <th><div class="d-inline-block">Instrument</div></th>
                <th><div class="d-inline-block">Style</div></th>
                <th><div class="d-none d-md-inline-block">Level</div></th>
                <th><div class="d-inline-block">Location</div></th>
                <th><div class="d-inline-block">Date</div></th>
                <th><div class="d-none d-md-inline-block">Start</div></th>
                <th><div class="d-none d-md-inline-block">End</div></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var lesson in lessons)
            {
                <tr @onclick="()=>GoToLessonDetails(lesson.Id)">
                    <td><div class="d-inline-block">@lesson.InstrumentName</div></td>
                    <td><div class="d-inline-block">@lesson.InstrumentStyle</div></td>
                    <td><div class="d-none d-md-inline-block">@lesson.LessonLevel</div></td>
                    <td><div class="d-inline-block">@lesson.Township</div></td>
                    <td><div class="d-inline-block">@lesson.Start.ToShortDateString()</div></td>
                    <td><div class="d-none d-md-inline-block">@lesson.Start.ToShortTimeString()</div></td>
                    <td><div class="d-none d-md-inline-block">@lesson.Stop.ToShortTimeString()</div></td>
                </tr>
            }
        </tbody>
    </table>
</div>







@code {
    public ResponseTeacherVM teacher = new ResponseTeacherVM();
    public List<ResponseLessonVM> lessons = new List<ResponseLessonVM>();

    [Parameter]
    public int teacherId { get; set; }


    protected override async Task OnInitializedAsync()
    {

        var teacherDTO = await Client.GetFromJsonAsync<ResponseTeacherDTO>("https://localhost:44397/api/Teacher/One/" + teacherId);
        var lessonsDTO = await Client.GetFromJsonAsync <List<ResponseLessonDTO>>("https://localhost:44397/api/Lesson/GetAllTeacherLessons/" + teacherId);

        teacher = _mapper.Map<ResponseTeacherVM>(teacherDTO);
        lessons = _mapper.Map<List<ResponseLessonVM>>(lessonsDTO);
    }

    public void GoToLessonDetails(int id)
        {
            NavManager.NavigateTo($"/lessondetails/{id}");
        }

}



